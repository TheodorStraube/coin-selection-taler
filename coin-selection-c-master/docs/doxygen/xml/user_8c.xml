<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="user_8c" kind="file" language="C++">
    <compoundname>user.c</compoundname>
    <includes refid="user_8h" local="yes">user.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">math.h</includes>
    <incdepgraph>
      <node id="3">
        <label>common.h</label>
        <link refid="common_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>fee.h</label>
        <link refid="fee_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>user.h</label>
        <link refid="user_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/user.c</label>
        <link refid="user_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>math.h</label>
      </node>
      <node id="6">
        <label>stdlib.h</label>
      </node>
      <node id="4">
        <label>time.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="user_8c_1a1ab0d52a5f583e6f915a9dba47c951dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rand_range</definition>
        <argsstring>(int min, int max)</argsstring>
        <name>rand_range</name>
        <param>
          <type>int</type>
          <declname>min</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max</declname>
        </param>
        <briefdescription>
<para>Generate a random integer between min and max, inclusive. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>The minimum value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A random integer between min and max. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/user.c" line="18" column="5" bodyfile="src/user.c" bodystart="18" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="user_8c_1ace38ef5b8d06d731d95da978e4907c58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long long</type>
        <definition>long long rand_range_long</definition>
        <argsstring>(long long min, long long max)</argsstring>
        <name>rand_range_long</name>
        <param>
          <type>long long</type>
          <declname>min</declname>
        </param>
        <param>
          <type>long long</type>
          <declname>max</declname>
        </param>
        <briefdescription>
<para>Generate a random long long integer between min and max, inclusive. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>The minimum value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A random long long integer between min and max. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/user.c" line="30" column="11" bodyfile="src/user.c" bodystart="30" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="user_8c_1abdd29c08f8722fbf65fd87aae280374a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long long</type>
        <definition>long long generate_normal_ll</definition>
        <argsstring>(double mean, double stddev)</argsstring>
        <name>generate_normal_ll</name>
        <param>
          <type>double</type>
          <declname>mean</declname>
        </param>
        <param>
          <type>double</type>
          <declname>stddev</declname>
        </param>
        <briefdescription>
<para>Generate a random long long integer following a normal distribution. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mean</parametername>
</parameternamelist>
<parameterdescription>
<para>The mean of the normal distribution. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stddev</parametername>
</parameternamelist>
<parameterdescription>
<para>The standard deviation of the normal distribution. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A random long long integer following a normal distribution. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/user.c" line="56" column="11" bodyfile="src/user.c" bodystart="56" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="user_8c_1a863dcb764fe09eb5c9b5f515c043bd4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void generate_actions_for_student</definition>
        <argsstring>(Action **actions, int *size, int days)</argsstring>
        <name>generate_actions_for_student</name>
        <param>
          <type><ref refid="struct_action" kindref="compound">Action</ref> **</type>
          <declname>actions</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>days</declname>
        </param>
        <briefdescription>
<para>Generate actions for a student user type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actions</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the array of actions to be generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the size of the actions array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>days</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of days to simulate actions for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/user.c" line="92" column="6" bodyfile="src/user.c" bodystart="92" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="user_8c_1a4c260929a157124e4cfc1ab2b2751ffe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void generate_actions_for_student_static</definition>
        <argsstring>(Action **actions, int *size, int days)</argsstring>
        <name>generate_actions_for_student_static</name>
        <param>
          <type><ref refid="struct_action" kindref="compound">Action</ref> **</type>
          <declname>actions</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>days</declname>
        </param>
        <briefdescription>
<para>Generate static actions for a student user type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actions</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the array of actions to be generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the size of the actions array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>days</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of days to simulate actions for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/user.c" line="154" column="6" bodyfile="src/user.c" bodystart="154" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="user_8c_1a3eafe93ef067da38fa22adc7adb976e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void generate_actions_for_business_owner</definition>
        <argsstring>(Action **actions, int *size, int days)</argsstring>
        <name>generate_actions_for_business_owner</name>
        <param>
          <type><ref refid="struct_action" kindref="compound">Action</ref> **</type>
          <declname>actions</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>days</declname>
        </param>
        <briefdescription>
<para>Generate actions for a business owner user type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actions</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the array of actions to be generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the size of the actions array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>days</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of days to simulate actions for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/user.c" line="223" column="6" bodyfile="src/user.c" bodystart="223" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="user_8c_1af6c98a9770ce80b4f0265ce5c69112ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void generate_actions_for_retired</definition>
        <argsstring>(Action **actions, int *size, int days)</argsstring>
        <name>generate_actions_for_retired</name>
        <param>
          <type><ref refid="struct_action" kindref="compound">Action</ref> **</type>
          <declname>actions</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>days</declname>
        </param>
        <briefdescription>
<para>Generate actions for a retired user type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actions</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the array of actions to be generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the size of the actions array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>days</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of days to simulate actions for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/user.c" line="291" column="6" bodyfile="src/user.c" bodystart="291" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="user_8c_1a0af743e9e51f0386ffdd49fe9edb8287" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void generate_actions_for_family</definition>
        <argsstring>(Action **actions, int *size, int days)</argsstring>
        <name>generate_actions_for_family</name>
        <param>
          <type><ref refid="struct_action" kindref="compound">Action</ref> **</type>
          <declname>actions</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>days</declname>
        </param>
        <briefdescription>
<para>Generate actions for a family user type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actions</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the array of actions to be generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the size of the actions array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>days</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of days to simulate actions for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/user.c" line="351" column="6" bodyfile="src/user.c" bodystart="351" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="user_8c_1af8eb668e96ee0f34388f631da062429d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void generate_actions_for_freelancer</definition>
        <argsstring>(Action **actions, int *size, int days)</argsstring>
        <name>generate_actions_for_freelancer</name>
        <param>
          <type><ref refid="struct_action" kindref="compound">Action</ref> **</type>
          <declname>actions</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>days</declname>
        </param>
        <briefdescription>
<para>Generate actions for a freelancer user type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actions</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the array of actions to be generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the size of the actions array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>days</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of days to simulate actions for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/user.c" line="418" column="6" bodyfile="src/user.c" bodystart="418" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="user_8c_1a78c9ef795d6b4220ec9bc56bd15c8949" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void generate_actions_for_teacher</definition>
        <argsstring>(Action **actions, int *size, int days)</argsstring>
        <name>generate_actions_for_teacher</name>
        <param>
          <type><ref refid="struct_action" kindref="compound">Action</ref> **</type>
          <declname>actions</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>days</declname>
        </param>
        <briefdescription>
<para>Generate actions for a teacher user type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actions</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the array of actions to be generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the size of the actions array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>days</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of days to simulate actions for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/user.c" line="453" column="6" bodyfile="src/user.c" bodystart="453" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="user_8c_1ac3d7816416812fd8455cddd9a882a05b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void generate_actions_for_artist</definition>
        <argsstring>(Action **actions, int *size, int days)</argsstring>
        <name>generate_actions_for_artist</name>
        <param>
          <type><ref refid="struct_action" kindref="compound">Action</ref> **</type>
          <declname>actions</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>days</declname>
        </param>
        <briefdescription>
<para>Generate actions for an artist user type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actions</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the array of actions to be generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the size of the actions array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>days</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of days to simulate actions for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/user.c" line="498" column="6" bodyfile="src/user.c" bodystart="498" bodyend="540"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>Bohdan<sp/>Potuzhnyi<sp/>on<sp/>30.04.2024.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>user.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="user_8h" kindref="compound">user.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="user_8c_1a1ab0d52a5f583e6f915a9dba47c951dd" kindref="member">rand_range</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rand()<sp/>%<sp/>(max<sp/>-<sp/>min<sp/>+<sp/>1)<sp/>+<sp/>min;</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="user_8c_1ace38ef5b8d06d731d95da978e4907c58" kindref="member">rand_range_long</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>min,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>max)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(min<sp/>&gt;<sp/>max)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Add<sp/>error<sp/>handling<sp/>as<sp/>appropriate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>range<sp/>of<sp/>the<sp/>random<sp/>numbers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>range<sp/>=<sp/>max<sp/>-<sp/>min<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>buckets<sp/>=<sp/>RAND_MAX<sp/>/<sp/>range;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>limit<sp/>=<sp/>buckets<sp/>*<sp/>range;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>fairness<sp/>and<sp/>uniform<sp/>distribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>rand_val;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rand_val<sp/>=<sp/>rand();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(rand_val<sp/>&gt;=<sp/>limit);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>min<sp/>+<sp/>(rand_val<sp/>/<sp/>buckets);</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="user_8c_1abdd29c08f8722fbf65fd87aae280374a" kindref="member">generate_normal_ll</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mean,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stddev)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>n2<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n2_cached<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n2_cached)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n2_cached<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>n2<sp/>*<sp/>stddev<sp/>+<sp/>mean;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/>y,<sp/>r;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>2.0<sp/>*<sp/>rand()<sp/>/<sp/>(double)RAND_MAX<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>2.0<sp/>*<sp/>rand()<sp/>/<sp/>(double)RAND_MAX<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>x<sp/>*<sp/>x<sp/>+<sp/>y<sp/>*<sp/>y;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(r<sp/>==<sp/>0.0<sp/>||<sp/>r<sp/>&gt;<sp/>1.0);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>sqrt(-2.0<sp/>*<sp/>log(r)<sp/>/<sp/>r);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>n1<sp/>=<sp/>x<sp/>*<sp/>d;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n2<sp/>=<sp/>y<sp/>*<sp/>d;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n2_cached<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>n1<sp/>*<sp/>stddev<sp/>+<sp/>mean;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>result<sp/>is<sp/>non-negative<sp/>and<sp/>convert<sp/>to<sp/>long<sp/>long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>&lt;<sp/>0)<sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)result;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="user_8c_1a863dcb764fe09eb5c9b5f515c043bd4f" kindref="member">generate_actions_for_student</ref>(<ref refid="struct_action" kindref="compound">Action</ref><sp/>**actions,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>days)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>currentTimestamp;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>secondsPerDay<sp/>=<sp/>3600<sp/>*<sp/>24;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>accountBalance<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>*size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>memory<sp/>for<sp/>the<sp/>maximum<sp/>number<sp/>of<sp/>actions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assuming<sp/>up<sp/>to<sp/>5<sp/>actions<sp/>per<sp/>day<sp/>plus<sp/>2<sp/>for<sp/>the<sp/>first<sp/>and<sp/>last<sp/>day<sp/>of<sp/>each<sp/>month</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>*actions<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref><sp/>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_action" kindref="compound">Action</ref>)<sp/>*<sp/>days<sp/>*<sp/>6);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>day<sp/>=<sp/>1;<sp/>day<sp/>&lt;=<sp/>days;<sp/>day++)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dayOfMonth<sp/>=<sp/>(day<sp/>-<sp/>1)<sp/>%<sp/>30<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numActionsToday<sp/>=<sp/><ref refid="user_8c_1a1ab0d52a5f583e6f915a9dba47c951dd" kindref="member">rand_range</ref>(1,<sp/>5);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentTimestamp<sp/>=<sp/>(day<sp/>-<sp/>1)<sp/>*<sp/>secondsPerDay;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>day<sp/>of<sp/>the<sp/>month<sp/>actions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dayOfMonth<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*actions)[(*size)++]<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref>){.amount<sp/>=<sp/>1500000,<sp/>.operation<sp/>=<sp/><ref refid="fee_8h_1ad99e62941c8e4b13e5fc45ecaaf65effa55976904a78ceeb73196ab4aec9562a7" kindref="member">WITHDRAW_OP</ref>,<sp/>.time<sp/>=<sp/>currentTimestamp};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accountBalance<sp/>+=<sp/>1500000;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Last<sp/>day<sp/>of<sp/>the<sp/>month,<sp/>withdraw<sp/>remaining<sp/>balance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dayOfMonth<sp/>==<sp/>30)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>amount<sp/>=<sp/><ref refid="user_8c_1abdd29c08f8722fbf65fd87aae280374a" kindref="member">generate_normal_ll</ref>(accountBalance<sp/>*<sp/>0.95,<sp/>accountBalance<sp/>*<sp/>0.1);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(amount<sp/>&gt;<sp/>accountBalance)<sp/>amount<sp/>=<sp/>accountBalance;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*actions)[(*size)++]<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref>){.amount<sp/>=<sp/>amount,<sp/>.operation<sp/>=<sp/><ref refid="fee_8h_1ad99e62941c8e4b13e5fc45ecaaf65effa42479520571fb6b2e6c7afaa1e5352c8" kindref="member">DEPOSIT_OP</ref>,<sp/>.time<sp/>=<sp/>currentTimestamp};</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accountBalance<sp/>=<sp/>accountBalance<sp/>-<sp/>amount;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Random<sp/>transactions<sp/>for<sp/>the<sp/>day</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>action<sp/>=<sp/>0;<sp/>action<sp/>&lt;<sp/>numActionsToday;<sp/>action++)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>amount<sp/>for<sp/>the<sp/>transaction,<sp/>ensuring<sp/>it<sp/>does<sp/>not<sp/>drop<sp/>the<sp/>account<sp/>balance<sp/>below<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>amount<sp/>=<sp/><ref refid="user_8c_1abdd29c08f8722fbf65fd87aae280374a" kindref="member">generate_normal_ll</ref>(10000,<sp/>5000);<sp/></highlight><highlight class="comment">//<sp/>Random<sp/>amount<sp/>between<sp/>5k<sp/>and<sp/>15k<sp/>satoshis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(accountBalance<sp/>-<sp/>amount<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Adjust<sp/>amount<sp/>to<sp/>not<sp/>drop<sp/>below<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amount<sp/>=<sp/>accountBalance;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>a<sp/>withdrawal<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*actions)[(*size)++]<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref>){.amount<sp/>=<sp/>amount,<sp/>.operation<sp/>=<sp/><ref refid="fee_8h_1ad99e62941c8e4b13e5fc45ecaaf65effa42479520571fb6b2e6c7afaa1e5352c8" kindref="member">DEPOSIT_OP</ref>,<sp/>.time<sp/>=<sp/>currentTimestamp};</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accountBalance<sp/>-=<sp/>amount;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1%<sp/>chance<sp/>for<sp/>a<sp/>refund<sp/>operation,<sp/>which<sp/>logically<sp/>returns<sp/>funds<sp/>from<sp/>a<sp/>mistaken<sp/>withdrawal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="user_8c_1a1ab0d52a5f583e6f915a9dba47c951dd" kindref="member">rand_range</ref>(1,<sp/>100)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*actions)[(*size)++]<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref>){.amount<sp/>=<sp/>amount,<sp/>.operation<sp/>=<sp/><ref refid="fee_8h_1ad99e62941c8e4b13e5fc45ecaaf65effae502eb7f083711e2333ae27f76c9ea50" kindref="member">REFUND_OP</ref>,<sp/>.time<sp/>=<sp/>currentTimestamp};</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accountBalance<sp/>+=<sp/>amount;<sp/></highlight><highlight class="comment">//<sp/>Increase<sp/>account<sp/>balance<sp/>by<sp/>the<sp/>refunded<sp/>amount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>account<sp/>balance<sp/>never<sp/>drops<sp/>below<sp/>zero<sp/>after<sp/>adjustments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(accountBalance<sp/>&lt;<sp/>0)<sp/>accountBalance<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="user_8c_1a4c260929a157124e4cfc1ab2b2751ffe" kindref="member">generate_actions_for_student_static</ref>(<ref refid="struct_action" kindref="compound">Action</ref><sp/>**actions,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>days){</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>currentTimestamp;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>secondsPerDay<sp/>=<sp/>3600<sp/>*<sp/>24;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>accountBalance<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>*actions<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_action" kindref="compound">Action</ref>)<sp/>*<sp/>days<sp/>*<sp/>10);<sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>enough<sp/>space<sp/>considering<sp/>maximum<sp/>possible<sp/>actions<sp/>per<sp/>day</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>*size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>day<sp/>=<sp/>1;<sp/>day<sp/>&lt;=<sp/>days;<sp/>day++)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dayOfWeek<sp/>=<sp/>day<sp/>%<sp/>7;<sp/></highlight><highlight class="comment">//<sp/>0<sp/>for<sp/>Sunday,<sp/>6<sp/>for<sp/>Saturday</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentTimestamp<sp/>=<sp/>(day<sp/>-<sp/>1)<sp/>*<sp/>secondsPerDay;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Monthly<sp/>stipend<sp/>on<sp/>the<sp/>first<sp/>day<sp/>of<sp/>each<sp/>month<sp/>and<sp/>transport<sp/>cost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(day<sp/>%<sp/>30<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Monthly<sp/>stipend</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accountBalance<sp/>+=<sp/>2000000;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*actions)[(*size)++]<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref>){.amount<sp/>=<sp/>2000000,<sp/>.operation<sp/>=<sp/><ref refid="fee_8h_1ad99e62941c8e4b13e5fc45ecaaf65effa55976904a78ceeb73196ab4aec9562a7" kindref="member">WITHDRAW_OP</ref>,<sp/>.time<sp/>=<sp/>currentTimestamp};</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transport<sp/>cost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accountBalance<sp/>-=<sp/>240000;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*actions)[(*size)++]<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref>){.amount<sp/>=<sp/>240000,<sp/>.operation<sp/>=<sp/><ref refid="fee_8h_1ad99e62941c8e4b13e5fc45ecaaf65effa42479520571fb6b2e6c7afaa1e5352c8" kindref="member">DEPOSIT_OP</ref>,<sp/>.time<sp/>=<sp/>currentTimestamp};</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(day<sp/>%<sp/>30<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Last<sp/>day<sp/>of<sp/>the<sp/>month,<sp/>deposit<sp/>100%<sp/>of<sp/>the<sp/>balance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>depositAmount<sp/>=<sp/>accountBalance;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accountBalance<sp/>-=<sp/>depositAmount;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*actions)[(*size)++]<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref>){.amount<sp/>=<sp/>depositAmount,<sp/>.operation<sp/>=<sp/><ref refid="fee_8h_1ad99e62941c8e4b13e5fc45ecaaf65effa42479520571fb6b2e6c7afaa1e5352c8" kindref="member">DEPOSIT_OP</ref>,<sp/>.time<sp/>=<sp/>currentTimestamp};</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Weekday<sp/>spending</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dayOfWeek<sp/>&gt;=<sp/>1<sp/>&amp;&amp;<sp/>dayOfWeek<sp/>&lt;=<sp/>5)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Monday<sp/>to<sp/>Friday</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>amount<sp/>=<sp/>10000;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(accountBalance<sp/>-<sp/>amount<sp/>&lt;<sp/>0)<sp/>amount<sp/>=<sp/>accountBalance;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accountBalance<sp/>-=<sp/>amount;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*actions)[(*size)++]<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref>){.amount<sp/>=<sp/>amount,<sp/>.operation<sp/>=<sp/><ref refid="fee_8h_1ad99e62941c8e4b13e5fc45ecaaf65effa42479520571fb6b2e6c7afaa1e5352c8" kindref="member">DEPOSIT_OP</ref>,<sp/>.time<sp/>=<sp/>currentTimestamp};</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>Weekend<sp/>spending</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>amount<sp/>=<sp/>dayOfWeek<sp/>==<sp/>6<sp/>?<sp/>60000<sp/>:<sp/>30000;<sp/></highlight><highlight class="comment">//<sp/>Saturday<sp/>for<sp/>bar,<sp/>Sunday<sp/>for<sp/>food</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(accountBalance<sp/>-<sp/>amount<sp/>&lt;<sp/>0)<sp/>amount<sp/>=<sp/>accountBalance;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accountBalance<sp/>-=<sp/>amount;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*actions)[(*size)++]<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref>){.amount<sp/>=<sp/>amount,<sp/>.operation<sp/>=<sp/><ref refid="fee_8h_1ad99e62941c8e4b13e5fc45ecaaf65effa42479520571fb6b2e6c7afaa1e5352c8" kindref="member">DEPOSIT_OP</ref>,<sp/>.time<sp/>=<sp/>currentTimestamp};</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Additional<sp/>random<sp/>transactions<sp/>with<sp/>70%<sp/>probability</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rand()<sp/>%<sp/>100<sp/>&lt;<sp/>70)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numTransactions<sp/>=<sp/><ref refid="user_8c_1a1ab0d52a5f583e6f915a9dba47c951dd" kindref="member">rand_range</ref>(1,<sp/>3);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numTransactions;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>amount<sp/>=<sp/><ref refid="user_8c_1abdd29c08f8722fbf65fd87aae280374a" kindref="member">generate_normal_ll</ref>(7500,<sp/>5000);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(accountBalance<sp/>-<sp/>amount<sp/>&lt;<sp/>0)<sp/>amount<sp/>=<sp/>accountBalance;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accountBalance<sp/>-=<sp/>amount;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*actions)[(*size)++]<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref>){.amount<sp/>=<sp/>amount,<sp/>.operation<sp/>=<sp/><ref refid="fee_8h_1ad99e62941c8e4b13e5fc45ecaaf65effa42479520571fb6b2e6c7afaa1e5352c8" kindref="member">DEPOSIT_OP</ref>,<sp/>.time<sp/>=<sp/>currentTimestamp};</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>account<sp/>balance<sp/>never<sp/>drops<sp/>below<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(accountBalance<sp/>&lt;<sp/>0)<sp/>accountBalance<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="user_8c_1a3eafe93ef067da38fa22adc7adb976e3" kindref="member">generate_actions_for_business_owner</ref>(<ref refid="struct_action" kindref="compound">Action</ref><sp/>**actions,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>days){</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>currentTimestamp;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>secondsPerDay<sp/>=<sp/>3600<sp/>*<sp/>24;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>accountBalance<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>*size<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Start<sp/>with<sp/>0<sp/>actions<sp/>and<sp/>increment<sp/>as<sp/>we<sp/>add<sp/>actions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>memory<sp/>for<sp/>the<sp/>maximum<sp/>number<sp/>of<sp/>actions,<sp/>potentially<sp/>more<sp/>due<sp/>to<sp/>the<sp/>daily<sp/>deposits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>*actions<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref><sp/>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_action" kindref="compound">Action</ref>)<sp/>*<sp/>days<sp/>*<sp/>12);<sp/></highlight><highlight class="comment">//<sp/>Adjusted<sp/>for<sp/>additional<sp/>deposit<sp/>actions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>day<sp/>=<sp/>1;<sp/>day<sp/>&lt;=<sp/>days;<sp/>day++)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dayOfMonth<sp/>=<sp/>(day<sp/>-<sp/>1)<sp/>%<sp/>30<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentTimestamp<sp/>=<sp/>(day<sp/>-<sp/>1)<sp/>*<sp/>secondsPerDay;<sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>timestamp<sp/>for<sp/>the<sp/>start<sp/>of<sp/>the<sp/>current<sp/>day</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Daily<sp/>deposits,<sp/>1<sp/>to<sp/>3<sp/>times<sp/>a<sp/>day</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dailyDeposits<sp/>=<sp/><ref refid="user_8c_1a1ab0d52a5f583e6f915a9dba47c951dd" kindref="member">rand_range</ref>(1,<sp/>3);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>deposit<sp/>=<sp/>0;<sp/>deposit<sp/>&lt;<sp/>dailyDeposits;<sp/>deposit++)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>depositAmount<sp/>=<sp/><ref refid="user_8c_1ace38ef5b8d06d731d95da978e4907c58" kindref="member">rand_range_long</ref>(100000,<sp/>1500000);<sp/></highlight><highlight class="comment">//<sp/>Random<sp/>deposit<sp/>amount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*actions)[(*size)++]<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref>){.amount<sp/>=<sp/>depositAmount,<sp/>.operation<sp/>=<sp/><ref refid="fee_8h_1ad99e62941c8e4b13e5fc45ecaaf65effa55976904a78ceeb73196ab4aec9562a7" kindref="member">WITHDRAW_OP</ref>,<sp/>.time<sp/>=<sp/>currentTimestamp};</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accountBalance<sp/>+=<sp/>depositAmount;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dayOfMonth<sp/>==<sp/>30)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Last<sp/>day<sp/>of<sp/>the<sp/>month,<sp/>deposit<sp/>80%<sp/>of<sp/>the<sp/>balance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>depositAmount<sp/>=<sp/>accountBalance<sp/>*<sp/>80<sp/>/<sp/>100;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*actions)[(*size)++]<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref>){.amount<sp/>=<sp/>depositAmount,<sp/>.operation<sp/>=<sp/><ref refid="fee_8h_1ad99e62941c8e4b13e5fc45ecaaf65effa42479520571fb6b2e6c7afaa1e5352c8" kindref="member">DEPOSIT_OP</ref>,<sp/>.time<sp/>=<sp/>currentTimestamp};</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accountBalance<sp/>-=<sp/>depositAmount;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Regular<sp/>expenses<sp/>and<sp/>occasional<sp/>large<sp/>investments<sp/>or<sp/>expenses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numActionsToday<sp/>=<sp/><ref refid="user_8c_1a1ab0d52a5f583e6f915a9dba47c951dd" kindref="member">rand_range</ref>(3,<sp/>8);<sp/></highlight><highlight class="comment">//<sp/>Business<sp/>might<sp/>have<sp/>more<sp/>transactions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>action<sp/>=<sp/>0;<sp/>action<sp/>&lt;<sp/>numActionsToday;<sp/>action++)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Randomly<sp/>decide<sp/>if<sp/>this<sp/>is<sp/>a<sp/>regular<sp/>expense<sp/>or<sp/>a<sp/>large<sp/>investment/expense</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="user_8c_1a1ab0d52a5f583e6f915a9dba47c951dd" kindref="member">rand_range</ref>(1,<sp/>10)<sp/>&gt;<sp/>8)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>20%<sp/>chance<sp/>for<sp/>a<sp/>large<sp/>transaction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>amount<sp/>=<sp/><ref refid="user_8c_1abdd29c08f8722fbf65fd87aae280374a" kindref="member">generate_normal_ll</ref>(300000,<sp/>100000);<sp/></highlight><highlight class="comment">//<sp/>Large<sp/>amount<sp/>for<sp/>investments/expenses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(accountBalance<sp/>-<sp/>amount<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amount<sp/>=<sp/>accountBalance;<sp/></highlight><highlight class="comment">//<sp/>Adjust<sp/>to<sp/>avoid<sp/>negative<sp/>balance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*actions)[(*size)++]<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref>)<sp/>{.amount<sp/>=<sp/>amount,<sp/>.operation<sp/>=<sp/><ref refid="fee_8h_1ad99e62941c8e4b13e5fc45ecaaf65effa42479520571fb6b2e6c7afaa1e5352c8" kindref="member">DEPOSIT_OP</ref>,<sp/>.time<sp/>=<sp/>currentTimestamp};</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accountBalance<sp/>-=<sp/>amount;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Regular<sp/>business<sp/>expenses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>amount<sp/>=<sp/><ref refid="user_8c_1abdd29c08f8722fbf65fd87aae280374a" kindref="member">generate_normal_ll</ref>(50000,<sp/>20000);<sp/></highlight><highlight class="comment">//<sp/>Smaller<sp/>amount<sp/>for<sp/>regular<sp/>expenses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(accountBalance<sp/>-<sp/>amount<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amount<sp/>=<sp/>accountBalance;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*actions)[(*size)++]<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref>)<sp/>{.amount<sp/>=<sp/>amount,<sp/>.operation<sp/>=<sp/><ref refid="fee_8h_1ad99e62941c8e4b13e5fc45ecaaf65effa42479520571fb6b2e6c7afaa1e5352c8" kindref="member">DEPOSIT_OP</ref>,<sp/>.time<sp/>=<sp/>currentTimestamp};</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accountBalance<sp/>-=<sp/>amount;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2%<sp/>chance<sp/>for<sp/>receiving<sp/>a<sp/>large<sp/>refund<sp/>related<sp/>to<sp/>business<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="user_8c_1a1ab0d52a5f583e6f915a9dba47c951dd" kindref="member">rand_range</ref>(1,<sp/>50)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>refundAmount<sp/>=<sp/><ref refid="user_8c_1ace38ef5b8d06d731d95da978e4907c58" kindref="member">rand_range_long</ref>(100000,<sp/>300000);<sp/></highlight><highlight class="comment">//<sp/>Larger<sp/>refund<sp/>amount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*actions)[(*size)++]<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref>)<sp/>{.amount<sp/>=<sp/>refundAmount,<sp/>.operation<sp/>=<sp/><ref refid="fee_8h_1ad99e62941c8e4b13e5fc45ecaaf65effae502eb7f083711e2333ae27f76c9ea50" kindref="member">REFUND_OP</ref>,<sp/>.time<sp/>=<sp/>currentTimestamp};</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accountBalance<sp/>+=<sp/>refundAmount;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(accountBalance<sp/>&lt;<sp/>0)<sp/>accountBalance<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="user_8c_1af6c98a9770ce80b4f0265ce5c69112ea" kindref="member">generate_actions_for_retired</ref>(<ref refid="struct_action" kindref="compound">Action</ref><sp/>**actions,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>days){</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>currentTimestamp;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>secondsPerDay<sp/>=<sp/>3600<sp/>*<sp/>24;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>accountBalance<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>*size<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Start<sp/>with<sp/>0<sp/>actions<sp/>and<sp/>increment<sp/>as<sp/>we<sp/>add<sp/>actions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>memory<sp/>for<sp/>the<sp/>maximum<sp/>number<sp/>of<sp/>actions,<sp/>considering<sp/>the<sp/>pattern<sp/>of<sp/>transactions<sp/>for<sp/>retirees</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>*actions<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref><sp/>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_action" kindref="compound">Action</ref>)<sp/>*<sp/>days<sp/>*<sp/>4);<sp/></highlight><highlight class="comment">//<sp/>Fewer<sp/>actions<sp/>per<sp/>day<sp/>expected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>day<sp/>=<sp/>1;<sp/>day<sp/>&lt;=<sp/>days;<sp/>day++)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dayOfMonth<sp/>=<sp/>(day<sp/>-<sp/>1)<sp/>%<sp/>30<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentTimestamp<sp/>=<sp/>(day<sp/>-<sp/>1)<sp/>*<sp/>secondsPerDay;<sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>timestamp<sp/>for<sp/>the<sp/>start<sp/>of<sp/>the<sp/>current<sp/>day</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Monthly<sp/>pension<sp/>or<sp/>retirement<sp/>savings<sp/>withdrawal<sp/>at<sp/>the<sp/>start<sp/>of<sp/>the<sp/>month</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dayOfMonth<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>pensionAmount<sp/>=<sp/><ref refid="user_8c_1ace38ef5b8d06d731d95da978e4907c58" kindref="member">rand_range_long</ref>(500000,<sp/>1000000);<sp/></highlight><highlight class="comment">//<sp/>Fixed<sp/>income<sp/>amount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*actions)[(*size)++]<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref>){.amount<sp/>=<sp/>pensionAmount,<sp/>.operation<sp/>=<sp/><ref refid="fee_8h_1ad99e62941c8e4b13e5fc45ecaaf65effa55976904a78ceeb73196ab4aec9562a7" kindref="member">WITHDRAW_OP</ref>,<sp/>.time<sp/>=<sp/>currentTimestamp};</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accountBalance<sp/>+=<sp/>pensionAmount;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Regular<sp/>expenses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="user_8c_1a1ab0d52a5f583e6f915a9dba47c951dd" kindref="member">rand_range</ref>(1,<sp/>30)<sp/>&lt;=<sp/>25)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Most<sp/>days<sp/>have<sp/>some<sp/>routine<sp/>expense</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>expenseAmount<sp/>=<sp/><ref refid="user_8c_1abdd29c08f8722fbf65fd87aae280374a" kindref="member">generate_normal_ll</ref>(30000,<sp/>15000);</highlight><highlight class="comment">//<sp/>Regular<sp/>expense<sp/>amount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(accountBalance<sp/>-<sp/>expenseAmount<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expenseAmount<sp/>=<sp/>accountBalance;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*actions)[(*size)++]<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref>){.amount<sp/>=<sp/>expenseAmount,<sp/>.operation<sp/>=<sp/><ref refid="fee_8h_1ad99e62941c8e4b13e5fc45ecaaf65effa42479520571fb6b2e6c7afaa1e5352c8" kindref="member">DEPOSIT_OP</ref>,<sp/>.time<sp/>=<sp/>currentTimestamp};</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accountBalance<sp/>-=<sp/>expenseAmount;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Occasional<sp/>large<sp/>expense</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="user_8c_1a1ab0d52a5f583e6f915a9dba47c951dd" kindref="member">rand_range</ref>(1,<sp/>30)<sp/>==<sp/>30)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Once<sp/>a<sp/>month,<sp/>potentially<sp/>a<sp/>large<sp/>expense</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>largeExpenseAmount<sp/>=<sp/><ref refid="user_8c_1abdd29c08f8722fbf65fd87aae280374a" kindref="member">generate_normal_ll</ref>(200000,<sp/>100000);<sp/></highlight><highlight class="comment">//<sp/>Large<sp/>expense<sp/>for<sp/>healthcare,<sp/>travel,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(accountBalance<sp/>-<sp/>largeExpenseAmount<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>largeExpenseAmount<sp/>=<sp/>accountBalance;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*actions)[(*size)++]<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref>){.amount<sp/>=<sp/>largeExpenseAmount,<sp/>.operation<sp/>=<sp/><ref refid="fee_8h_1ad99e62941c8e4b13e5fc45ecaaf65effa42479520571fb6b2e6c7afaa1e5352c8" kindref="member">DEPOSIT_OP</ref>,<sp/>.time<sp/>=<sp/>currentTimestamp};</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accountBalance<sp/>-=<sp/>largeExpenseAmount;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Investment<sp/>income<sp/>(if<sp/>applicable)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="user_8c_1a1ab0d52a5f583e6f915a9dba47c951dd" kindref="member">rand_range</ref>(1,<sp/>90)<sp/>==<sp/>45)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Quarterly<sp/>dividends<sp/>or<sp/>interest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>investmentIncome<sp/>=<sp/><ref refid="user_8c_1ace38ef5b8d06d731d95da978e4907c58" kindref="member">rand_range_long</ref>(20000,<sp/>100000);<sp/></highlight><highlight class="comment">//<sp/>Investment<sp/>income<sp/>amount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*actions)[(*size)++]<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref>){.amount<sp/>=<sp/>investmentIncome,<sp/>.operation<sp/>=<sp/><ref refid="fee_8h_1ad99e62941c8e4b13e5fc45ecaaf65effa55976904a78ceeb73196ab4aec9562a7" kindref="member">WITHDRAW_OP</ref>,<sp/>.time<sp/>=<sp/>currentTimestamp};</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accountBalance<sp/>+=<sp/>investmentIncome;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(accountBalance<sp/>&lt;<sp/>0)<sp/>accountBalance<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="user_8c_1a0af743e9e51f0386ffdd49fe9edb8287" kindref="member">generate_actions_for_family</ref>(<ref refid="struct_action" kindref="compound">Action</ref><sp/>**actions,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>days){</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>currentTimestamp;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>secondsPerDay<sp/>=<sp/>3600<sp/>*<sp/>24;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>accountBalance<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>*size<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Start<sp/>with<sp/>0<sp/>actions<sp/>and<sp/>increment<sp/>as<sp/>we<sp/>add<sp/>actions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>memory<sp/>considering<sp/>a<sp/>mix<sp/>of<sp/>regular<sp/>and<sp/>irregular<sp/>transactions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>*actions<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref><sp/>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_action" kindref="compound">Action</ref>)<sp/>*<sp/>days<sp/>*<sp/>8);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>day<sp/>=<sp/>1;<sp/>day<sp/>&lt;=<sp/>days;<sp/>day++)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dayOfMonth<sp/>=<sp/>(day<sp/>-<sp/>1)<sp/>%<sp/>30<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentTimestamp<sp/>=<sp/>(day<sp/>-<sp/>1)<sp/>*<sp/>secondsPerDay;<sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>timestamp<sp/>for<sp/>the<sp/>start<sp/>of<sp/>the<sp/>current<sp/>day</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Monthly<sp/>regular<sp/>deposit<sp/>from<sp/>employment<sp/>or<sp/>other<sp/>steady<sp/>sources</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dayOfMonth<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>regularIncome<sp/>=<sp/><ref refid="user_8c_1ace38ef5b8d06d731d95da978e4907c58" kindref="member">rand_range_long</ref>(2000000,<sp/>3000000);<sp/></highlight><highlight class="comment">//<sp/>Regular<sp/>monthly<sp/>income</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*actions)[(*size)++]<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref>){.amount<sp/>=<sp/>regularIncome,<sp/>.operation<sp/>=<sp/><ref refid="fee_8h_1ad99e62941c8e4b13e5fc45ecaaf65effa55976904a78ceeb73196ab4aec9562a7" kindref="member">WITHDRAW_OP</ref>,<sp/>.time<sp/>=<sp/>currentTimestamp};</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accountBalance<sp/>+=<sp/>regularIncome;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Regular<sp/>daily<sp/>expenses<sp/>with<sp/>occasional<sp/>larger<sp/>monthly<sp/>bills</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numActionsToday<sp/>=<sp/><ref refid="user_8c_1a1ab0d52a5f583e6f915a9dba47c951dd" kindref="member">rand_range</ref>(2,<sp/>4);<sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>transactions<sp/>for<sp/>today</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>action<sp/>=<sp/>0;<sp/>action<sp/>&lt;<sp/>numActionsToday;<sp/>action++)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>amount;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Simulate<sp/>a<sp/>larger<sp/>expense<sp/>on<sp/>the<sp/>first<sp/>day<sp/>of<sp/>the<sp/>month<sp/>(e.g.,<sp/>rent,<sp/>mortgage)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dayOfMonth<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>action<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amount<sp/>=<sp/><ref refid="user_8c_1abdd29c08f8722fbf65fd87aae280374a" kindref="member">generate_normal_ll</ref>(350000,<sp/>150000);<sp/></highlight><highlight class="comment">//<sp/>Larger<sp/>expense<sp/>at<sp/>the<sp/>start<sp/>of<sp/>the<sp/>month</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amount<sp/>=<sp/><ref refid="user_8c_1abdd29c08f8722fbf65fd87aae280374a" kindref="member">generate_normal_ll</ref>(30000,<sp/>10000);<sp/></highlight><highlight class="comment">//<sp/>Regular<sp/>daily<sp/>expense</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(accountBalance<sp/>-<sp/>amount<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>amount<sp/>=<sp/>accountBalance;<sp/></highlight><highlight class="comment">//<sp/>Adjust<sp/>to<sp/>avoid<sp/>negative<sp/>balance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*actions)[(*size)++]<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref>){.amount<sp/>=<sp/>amount,<sp/>.operation<sp/>=<sp/><ref refid="fee_8h_1ad99e62941c8e4b13e5fc45ecaaf65effa42479520571fb6b2e6c7afaa1e5352c8" kindref="member">DEPOSIT_OP</ref>,<sp/>.time<sp/>=<sp/>currentTimestamp};</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accountBalance<sp/>-=<sp/>amount;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Occasional<sp/>large<sp/>deposits<sp/>(e.g.,<sp/>bonuses,<sp/>gifts)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="user_8c_1a1ab0d52a5f583e6f915a9dba47c951dd" kindref="member">rand_range</ref>(1,<sp/>180)<sp/>==<sp/>90)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Twice<sp/>a<sp/>year</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>largeDeposit<sp/>=<sp/><ref refid="user_8c_1ace38ef5b8d06d731d95da978e4907c58" kindref="member">rand_range_long</ref>(500000,<sp/>1000000);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*actions)[(*size)++]<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref>){.amount<sp/>=<sp/>largeDeposit,<sp/>.operation<sp/>=<sp/><ref refid="fee_8h_1ad99e62941c8e4b13e5fc45ecaaf65effa55976904a78ceeb73196ab4aec9562a7" kindref="member">WITHDRAW_OP</ref>,<sp/>.time<sp/>=<sp/>currentTimestamp};</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accountBalance<sp/>+=<sp/>largeDeposit;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Periodic<sp/>large<sp/>withdrawals<sp/>for<sp/>significant<sp/>expenses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="user_8c_1a1ab0d52a5f583e6f915a9dba47c951dd" kindref="member">rand_range</ref>(1,<sp/>360)<sp/>==<sp/>180)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Once<sp/>a<sp/>year<sp/>(e.g.,<sp/>tuition<sp/>fees,<sp/>medical<sp/>bills)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>largeExpense<sp/>=<sp/><ref refid="user_8c_1abdd29c08f8722fbf65fd87aae280374a" kindref="member">generate_normal_ll</ref>(500000,<sp/>200000);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(accountBalance<sp/>-<sp/>largeExpense<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>largeExpense<sp/>=<sp/>accountBalance;<sp/></highlight><highlight class="comment">//<sp/>Adjust<sp/>to<sp/>avoid<sp/>negative<sp/>balance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*actions)[(*size)++]<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref>){.amount<sp/>=<sp/>largeExpense,<sp/>.operation<sp/>=<sp/><ref refid="fee_8h_1ad99e62941c8e4b13e5fc45ecaaf65effa42479520571fb6b2e6c7afaa1e5352c8" kindref="member">DEPOSIT_OP</ref>,<sp/>.time<sp/>=<sp/>currentTimestamp};</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accountBalance<sp/>-=<sp/>largeExpense;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(accountBalance<sp/>&lt;<sp/>0)<sp/>accountBalance<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="user_8c_1af8eb668e96ee0f34388f631da062429d" kindref="member">generate_actions_for_freelancer</ref>(<ref refid="struct_action" kindref="compound">Action</ref><sp/>**actions,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>days)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>currentTimestamp;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>secondsPerDay<sp/>=<sp/>86400;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>accountBalance<sp/>=<sp/>500000;<sp/></highlight><highlight class="comment">//<sp/>Start<sp/>with<sp/>some<sp/>initial<sp/>balance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>*actions<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_action" kindref="compound">Action</ref>)<sp/>*<sp/>days<sp/>*<sp/>4);<sp/></highlight><highlight class="comment">//<sp/>Less<sp/>frequent<sp/>transactions<sp/>than<sp/>a<sp/>business<sp/>owner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>*size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>day<sp/>=<sp/>1;<sp/>day<sp/>&lt;=<sp/>days;<sp/>day++)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentTimestamp<sp/>=<sp/>(day<sp/>-<sp/>1)<sp/>*<sp/>secondsPerDay;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Random<sp/>chance<sp/>of<sp/>receiving<sp/>payment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="user_8c_1a1ab0d52a5f583e6f915a9dba47c951dd" kindref="member">rand_range</ref>(1,<sp/>30)<sp/>==<sp/>1)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Receives<sp/>payment<sp/>roughly<sp/>once<sp/>a<sp/>month</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>paymentAmount<sp/>=<sp/><ref refid="user_8c_1ace38ef5b8d06d731d95da978e4907c58" kindref="member">rand_range_long</ref>(100000,<sp/>500000);<sp/></highlight><highlight class="comment">//<sp/>Payment<sp/>amount<sp/>varies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*actions)[(*size)++]<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref>){.amount<sp/>=<sp/>paymentAmount,<sp/>.operation<sp/>=<sp/><ref refid="fee_8h_1ad99e62941c8e4b13e5fc45ecaaf65effa55976904a78ceeb73196ab4aec9562a7" kindref="member">WITHDRAW_OP</ref>,<sp/>.time<sp/>=<sp/>currentTimestamp};</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accountBalance<sp/>+=<sp/>paymentAmount;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Daily<sp/>expenses,<sp/>much<sp/>lower<sp/>than<sp/>income<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>expenseAmount<sp/>=<sp/><ref refid="user_8c_1abdd29c08f8722fbf65fd87aae280374a" kindref="member">generate_normal_ll</ref>(20000,<sp/>5000);<sp/></highlight><highlight class="comment">//<sp/>Smaller<sp/>daily<sp/>living<sp/>expenses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(accountBalance<sp/>-<sp/>expenseAmount<sp/>&lt;<sp/>0)<sp/>expenseAmount<sp/>=<sp/>accountBalance;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*actions)[(*size)++]<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref>){.amount<sp/>=<sp/>expenseAmount,<sp/>.operation<sp/>=<sp/><ref refid="fee_8h_1ad99e62941c8e4b13e5fc45ecaaf65effa42479520571fb6b2e6c7afaa1e5352c8" kindref="member">DEPOSIT_OP</ref>,<sp/>.time<sp/>=<sp/>currentTimestamp};</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accountBalance<sp/>-=<sp/>expenseAmount;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(accountBalance<sp/>&lt;<sp/>0)<sp/>accountBalance<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>balance<sp/>doesn&apos;t<sp/>drop<sp/>below<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="user_8c_1a78c9ef795d6b4220ec9bc56bd15c8949" kindref="member">generate_actions_for_teacher</ref>(<ref refid="struct_action" kindref="compound">Action</ref><sp/>**actions,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>days)<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>currentTimestamp;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>secondsPerDay<sp/>=<sp/>86400;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>accountBalance<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>*actions<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref><sp/>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_action" kindref="compound">Action</ref>)<sp/>*<sp/>days<sp/>*<sp/>4);<sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>memory<sp/>for<sp/>actions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>*size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>day<sp/>=<sp/>1;<sp/>day<sp/>&lt;=<sp/>days;<sp/>day++)<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dayOfMonth<sp/>=<sp/>(day<sp/>-<sp/>1)<sp/>%<sp/>30<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentTimestamp<sp/>=<sp/>(day<sp/>-<sp/>1)<sp/>*<sp/>secondsPerDay;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Monthly<sp/>salary<sp/>on<sp/>the<sp/>first<sp/>day<sp/>of<sp/>each<sp/>month</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dayOfMonth<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>salaryAmount<sp/>=<sp/>3000000;<sp/></highlight><highlight class="comment">//<sp/>Fixed<sp/>monthly<sp/>salary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*actions)[(*size)++]<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref>){.<ref refid="struct_action_1a07200a883f79ec67a54e626570a89a33" kindref="member">amount</ref><sp/>=<sp/>salaryAmount,<sp/>.operation<sp/>=<sp/><ref refid="fee_8h_1ad99e62941c8e4b13e5fc45ecaaf65effa55976904a78ceeb73196ab4aec9562a7" kindref="member">WITHDRAW_OP</ref>,<sp/>.time<sp/>=<sp/>currentTimestamp};</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accountBalance<sp/>+=<sp/>salaryAmount;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Daily<sp/>expenses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>dailyExpense<sp/>=<sp/>20000;<sp/></highlight><highlight class="comment">//<sp/>Small<sp/>daily<sp/>expenses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(accountBalance<sp/>-<sp/>dailyExpense<sp/>&lt;<sp/>0)<sp/>dailyExpense<sp/>=<sp/>accountBalance;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*actions)[(*size)++]<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref>){.amount<sp/>=<sp/>dailyExpense,<sp/>.operation<sp/>=<sp/><ref refid="fee_8h_1ad99e62941c8e4b13e5fc45ecaaf65effa42479520571fb6b2e6c7afaa1e5352c8" kindref="member">DEPOSIT_OP</ref>,<sp/>.time<sp/>=<sp/>currentTimestamp};</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accountBalance<sp/>-=<sp/>dailyExpense;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Occasional<sp/>large<sp/>expenses,<sp/>once<sp/>a<sp/>month</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dayOfMonth<sp/>==<sp/>15)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Middle<sp/>of<sp/>the<sp/>month</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>largeExpense<sp/>=<sp/>100000;<sp/></highlight><highlight class="comment">//<sp/>Large<sp/>expense<sp/>for<sp/>supplies<sp/>or<sp/>professional<sp/>development</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(accountBalance<sp/>-<sp/>largeExpense<sp/>&lt;<sp/>0)<sp/>largeExpense<sp/>=<sp/>accountBalance;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*actions)[(*size)++]<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref>){.amount<sp/>=<sp/>largeExpense,<sp/>.operation<sp/>=<sp/><ref refid="fee_8h_1ad99e62941c8e4b13e5fc45ecaaf65effa42479520571fb6b2e6c7afaa1e5352c8" kindref="member">DEPOSIT_OP</ref>,<sp/>.time<sp/>=<sp/>currentTimestamp};</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accountBalance<sp/>-=<sp/>largeExpense;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>account<sp/>balance<sp/>never<sp/>drops<sp/>below<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(accountBalance<sp/>&lt;<sp/>0)<sp/>accountBalance<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal">}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="user_8c_1ac3d7816416812fd8455cddd9a882a05b" kindref="member">generate_actions_for_artist</ref>(<ref refid="struct_action" kindref="compound">Action</ref><sp/>**actions,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>days)<sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>currentTimestamp;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>secondsPerDay<sp/>=<sp/>86400;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>accountBalance<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>*actions<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref><sp/>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_action" kindref="compound">Action</ref>)<sp/>*<sp/>days<sp/>*<sp/>6);<sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>memory<sp/>for<sp/>actions,<sp/>considering<sp/>irregular<sp/>income<sp/>and<sp/>expenses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>*size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>day<sp/>=<sp/>1;<sp/>day<sp/>&lt;=<sp/>days;<sp/>day++)<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentTimestamp<sp/>=<sp/>(day<sp/>-<sp/>1)<sp/>*<sp/>secondsPerDay;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Irregular<sp/>income<sp/>from<sp/>sales<sp/>or<sp/>commissions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="user_8c_1a1ab0d52a5f583e6f915a9dba47c951dd" kindref="member">rand_range</ref>(1,<sp/>3)<sp/>==<sp/>1)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Roughly<sp/>once<sp/>a<sp/>few<sp/>days</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>incomeAmount<sp/>=<sp/><ref refid="user_8c_1ace38ef5b8d06d731d95da978e4907c58" kindref="member">rand_range_long</ref>(500000,<sp/>2000000);<sp/></highlight><highlight class="comment">//<sp/>Varied<sp/>income<sp/>amounts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*actions)[(*size)++]<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref>){.amount<sp/>=<sp/>incomeAmount,<sp/>.operation<sp/>=<sp/><ref refid="fee_8h_1ad99e62941c8e4b13e5fc45ecaaf65effa55976904a78ceeb73196ab4aec9562a7" kindref="member">WITHDRAW_OP</ref>,<sp/>.time<sp/>=<sp/>currentTimestamp};</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accountBalance<sp/>+=<sp/>incomeAmount;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Regular<sp/>daily<sp/>expenses<sp/>for<sp/>art<sp/>supplies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>dailyExpense<sp/>=<sp/><ref refid="user_8c_1abdd29c08f8722fbf65fd87aae280374a" kindref="member">generate_normal_ll</ref>(20000,<sp/>5000);<sp/></highlight><highlight class="comment">//<sp/>Regular<sp/>daily<sp/>expenses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(accountBalance<sp/>-<sp/>dailyExpense<sp/>&lt;<sp/>0)<sp/>dailyExpense<sp/>=<sp/>accountBalance;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*actions)[(*size)++]<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref>){.amount<sp/>=<sp/>dailyExpense,<sp/>.operation<sp/>=<sp/><ref refid="fee_8h_1ad99e62941c8e4b13e5fc45ecaaf65effa42479520571fb6b2e6c7afaa1e5352c8" kindref="member">DEPOSIT_OP</ref>,<sp/>.time<sp/>=<sp/>currentTimestamp};</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accountBalance<sp/>-=<sp/>dailyExpense;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Occasional<sp/>large<sp/>expenses<sp/>for<sp/>exhibitions<sp/>or<sp/>materials</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="user_8c_1a1ab0d52a5f583e6f915a9dba47c951dd" kindref="member">rand_range</ref>(1,<sp/>90)<sp/>==<sp/>1)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Roughly<sp/>once<sp/>every<sp/>three<sp/>months</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>largeExpense<sp/>=<sp/><ref refid="user_8c_1abdd29c08f8722fbf65fd87aae280374a" kindref="member">generate_normal_ll</ref>(300000,<sp/>100000);<sp/></highlight><highlight class="comment">//<sp/>Large<sp/>expense<sp/>amount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(accountBalance<sp/>-<sp/>largeExpense<sp/>&lt;<sp/>0)<sp/>largeExpense<sp/>=<sp/>accountBalance;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*actions)[(*size)++]<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref>){.amount<sp/>=<sp/>largeExpense,<sp/>.operation<sp/>=<sp/><ref refid="fee_8h_1ad99e62941c8e4b13e5fc45ecaaf65effa42479520571fb6b2e6c7afaa1e5352c8" kindref="member">DEPOSIT_OP</ref>,<sp/>.time<sp/>=<sp/>currentTimestamp};</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accountBalance<sp/>-=<sp/>largeExpense;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Potential<sp/>grants<sp/>or<sp/>awards</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="user_8c_1a1ab0d52a5f583e6f915a9dba47c951dd" kindref="member">rand_range</ref>(1,<sp/>60)<sp/>==<sp/>1)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Once<sp/>a<sp/>couple<sp/>of<sp/>months</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>grantAmount<sp/>=<sp/><ref refid="user_8c_1ace38ef5b8d06d731d95da978e4907c58" kindref="member">rand_range_long</ref>(500000,<sp/>1000000);<sp/></highlight><highlight class="comment">//<sp/>Grant<sp/>or<sp/>award<sp/>amount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*actions)[(*size)++]<sp/>=<sp/>(<ref refid="struct_action" kindref="compound">Action</ref>){.amount<sp/>=<sp/>grantAmount,<sp/>.operation<sp/>=<sp/><ref refid="fee_8h_1ad99e62941c8e4b13e5fc45ecaaf65effa55976904a78ceeb73196ab4aec9562a7" kindref="member">WITHDRAW_OP</ref>,<sp/>.time<sp/>=<sp/>currentTimestamp};</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accountBalance<sp/>+=<sp/>grantAmount;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>account<sp/>balance<sp/>never<sp/>drops<sp/>below<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(accountBalance<sp/>&lt;<sp/>0)<sp/>accountBalance<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/user.c"/>
  </compounddef>
</doxygen>
